function [watermarkedImg] = watermark_DWT_SVD(oryginalImage,watermark,fileName)

%oryginal image
img = oryginalImage;
[img_LL,img_LH,img_HL,img_HH]=dwt2(img,'haar');
[U_img,S_img,V_img]= svd(img_LL);

figure;imshow(uint8(img));title('Oryginal Image');

%watermark
wimg = watermark;
[wimg_LL, wimg_LH, wimg_HL, wimg_HH] = dwt2(wimg, 'haar');
[U_wimg, S_wimg, V_wimg] = svd(wimg_LL);

figure;imshow(uint8(wimg));title('Watermark');

%watermarking

S = S_img+0.03*S_wimg;
watermarked = U_img * S * V_img';
watermarkedImage = idwt2(watermarked, img_LH, img_HL, img_HH, 'haar');

figure;imshow(uint8(watermarkedImage));title('Watermarked Image');




watermarkedImg = watermarkedImage;



% alpha = 0.03; % embedding strength
% I = oryginalImage;
% figure(1); imshow(I);title('The image in which we insert watermark');
% [LL1,HL1,LH1,HH1] = dwt2(I,'haar');
% [LL2,HL2,LH2,HH2] = dwt2(LL1,'haar');
% p = size(LL2);
% %applying SVD on LL2
% [Uy,Sy,Vy] = svd(LL2);
% q = size(Sy);
% %Define watermark
% I_w = watermark;
% I_w = I_w(:,:,1);
% I1_w = imresize(I_w, p);
% figure(2); imshow(I1_w); title('original watermark');
% %applying SVD on watermark
% [Uw,Sw,Vw] = svd(double(I1_w));
%     
% %embed watermark
% Smark = Sy + alpha*Sw;
% %Rebuild the sub-bands using SVD
% LL2_1 = Uy*Smark*Vy';
% %Apply inverse dwt to get watermarked image
% LL1_1 = idwt2(LL2_1,HL2,LH2,HH2,'haar');
% I_1 = idwt2(LL1_1,HL1,LH1,HH1,'haar'); 
% figure(3); imshow(uint8(I_1)); title('Watermarked Image');
% 
% %EXTRACTION
% [LL1_wmv,HL1_wmv,LH1_wmv,HH1_wmv] = dwt2(I_1,'haar');
% [LL2_wmv,HL2_wmv,LH2_wmv,HH2_wmv] = dwt2(LL1_wmv,'haar');
% [Uy_wmv,Sy_wmv,Vy_wmv] = svd(LL2_wmv);
% Swrec = (Sy_wmv - Sy)/alpha;
% WMy = Uw*Swrec*Vw';    
% figure(4); imshow(uint8(WMy)); title('Extracted Watermark');
% 
% watermarkedImg = uint8(I_1);

end

